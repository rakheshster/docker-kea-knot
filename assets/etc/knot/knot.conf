# Knot DNS Config file
# See knot.conf(5) or refer to the server documentation.

#### Everything in this section is best left as it is, you don't need to change it ####
#### Begin section ####
server:
    rundir: "/var/run/knot"
    user: knot:knot
    listen: [ 0.0.0.0@8053, ::@8053 ]
    # change the default port coz I'll have Knot Resolver running on port 53

log:
  - target: stdout
    any: info

database:
    storage: "/var/lib/knot"

template:
  - id: default
    storage: "/var/lib/knot"
    file: "%s.zone"
#### End section ####

# This defines my home environment, some parts might be defined but not used
remote:
   - id: pi0
     address: 192.168.17.5@8053
     key: knotkey1

   - id: pi1
     address: 192.168.17.6@8053
     key: knotkey1

# The first key has to match with what's defined in Kea DDNS. They are generated using keymgr (part of Knot)
# Command to generate: keymgr -t "kea-ddns"
key:
   - id: kea-ddns
     algorithm: hmac-sha256
     secret: JdQaWZZHuIfcALyq2dRE3sQbo6jHeinChME4q3YgU6k=

   - id: knotkey1
     algorithm: hmac-sha256
     secret: h4gx+kSOtUbLDohQbrAZSOk9in1yujMP/9mrk4tspAk=

acl:
    # an ACL to deny everything
   - id: deny_all
     address: 192.168.17.0/24
     deny: on

    # defining ACLs on who can send DDNS updates; I limit this to those with the kea-ddns TSIG key
   - id: acl_update_keaddns
     key: kea-ddns
     action: update

    # defining ACLs on whom to send transfers & notify to
   - id: acl_xfer_notify
     key: knotkey1
     action: [ transfer, notify ]


zone:
    # defining a zone; it takes defaults from the template above (e.g. path). I can override others here. 
    # this is a primary zone, so I add a clause to notify my secondaries
    # this zone also takes dynamic updates
   - domain: rakhesh.local
     file: "rakhesh.local.zone"
     acl: [ deny_all, acl_update_keaddns, acl_xfer_notify ]
     notify: pi1